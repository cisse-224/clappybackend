# Generated by Django 5.2.7 on 2025-10-04 01:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_vehicule', models.CharField(choices=[('berline', 'Berline'), ('suv', 'SUV'), ('minibus', 'Minibus'), ('moto', 'Moto')], max_length=15, verbose_name='Type de véhicule')),
                ('prix_base', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix de base (GNF)')),
                ('prix_par_km', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Prix par km (GNF)')),
                ('est_actif', models.BooleanField(default=True, verbose_name='Est actif')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Tarif',
                'verbose_name_plural': 'Tarifs',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('is_client', models.BooleanField(default=False)),
                ('is_chauffeur', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chauffeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=15, verbose_name='Téléphone')),
                ('numero_permis', models.CharField(max_length=20, unique=True, verbose_name='Numéro de permis')),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('en_course', 'En course'), ('hors_ligne', 'Hors ligne'), ('en_pause', 'En pause')], default='hors_ligne', max_length=15, verbose_name='Statut')),
                ('est_approuve', models.BooleanField(default=False, verbose_name='Est approuvé')),
                ('note_moyenne', models.DecimalField(decimal_places=2, default=5.0, max_digits=3, verbose_name='Note moyenne')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Chauffeur',
                'verbose_name_plural': 'Chauffeurs',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=15, verbose_name='Téléphone')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adresse_depart', models.TextField(verbose_name='Adresse de départ')),
                ('adresse_destination', models.TextField(verbose_name='Adresse de destination')),
                ('latitude_depart', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude départ')),
                ('longitude_depart', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude départ')),
                ('latitude_destination', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude destination')),
                ('longitude_destination', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude destination')),
                ('type_course', models.CharField(choices=[('immediate', 'Course immédiate'), ('reservation', 'Réservation')], default='immediate', max_length=15, verbose_name='Type de course')),
                ('date_demande', models.DateTimeField(auto_now_add=True, verbose_name='Date de demande')),
                ('date_acceptation', models.DateTimeField(blank=True, null=True, verbose_name="Date d'acceptation")),
                ('date_debut', models.DateTimeField(blank=True, null=True, verbose_name='Date de début')),
                ('date_fin', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin')),
                ('date_reservation', models.DateTimeField(blank=True, null=True, verbose_name='Date de réservation')),
                ('tarif_estime', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tarif estimé (GNF)')),
                ('tarif_final', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tarif final (GNF)')),
                ('distance_estimee', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Distance estimée (km)')),
                ('duree_estimee', models.IntegerField(blank=True, null=True, verbose_name='Durée estimée (minutes)')),
                ('statut', models.CharField(choices=[('demandee', 'Demandée'), ('acceptee', 'Acceptée'), ('en_cours', 'En cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], default='demandee', max_length=15, verbose_name='Statut')),
                ('methode_paiement', models.CharField(choices=[('especes', 'Espèces'), ('mobile_money', 'Mobile Money'), ('carte_bancaire', 'Carte Bancaire')], max_length=15, verbose_name='Méthode de paiement')),
                ('notes_client', models.TextField(blank=True, verbose_name='Notes du client')),
                ('chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gestionclappy.chauffeur', verbose_name='Chauffeur')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_chauffeur', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note du chauffeur (1-5)')),
                ('note_vehicule', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note du véhicule (1-5)')),
                ('commentaire', models.TextField(blank=True, verbose_name='Commentaire')),
                ('date_evaluation', models.DateTimeField(auto_now_add=True, verbose_name="Date d'évaluation")),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.chauffeur', verbose_name='Chauffeur')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.client', verbose_name='Client')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.course', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
            },
        ),
        migrations.CreateModel(
            name='HistoriquePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude')),
                ('date_position', models.DateTimeField(auto_now_add=True, verbose_name='Date de position')),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.chauffeur', verbose_name='Chauffeur')),
            ],
            options={
                'verbose_name': 'Historique de position',
                'verbose_name_plural': 'Historiques de position',
                'ordering': ['-date_position'],
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant (GNF)')),
                ('identifiant_transaction', models.CharField(blank=True, max_length=100, verbose_name='Identifiant de transaction')),
                ('statut_paiement', models.CharField(choices=[('en_attente', 'En attente'), ('paye', 'Payé'), ('echoue', 'Échoué'), ('rembourse', 'Remboursé')], default='en_attente', max_length=15, verbose_name='Statut du paiement')),
                ('date_paiement', models.DateTimeField(auto_now_add=True, verbose_name='Date de paiement')),
                ('date_confirmation', models.DateTimeField(blank=True, null=True, verbose_name='Date de confirmation')),
                ('operateur_mobile_money', models.CharField(blank=True, max_length=20, verbose_name='Opérateur Mobile Money')),
                ('numero_mobile_money', models.CharField(blank=True, max_length=15, verbose_name='Numéro Mobile Money')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.course', verbose_name='Course')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
            },
        ),
        migrations.CreateModel(
            name='Vehicule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marque', models.CharField(max_length=50, verbose_name='Marque')),
                ('modele', models.CharField(max_length=50, verbose_name='Modèle')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('immatriculation', models.CharField(max_length=15, unique=True, verbose_name="Plaque d'immatriculation")),
                ('couleur', models.CharField(max_length=30, verbose_name='Couleur')),
                ('type_vehicule', models.CharField(choices=[('berline', 'Berline'), ('suv', 'SUV'), ('minibus', 'Minibus'), ('moto', 'Moto')], default='berline', max_length=15, verbose_name='Type de véhicule')),
                ('nombre_places', models.IntegerField(default=4, verbose_name='Nombre de places')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('chauffeur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gestionclappy.chauffeur', verbose_name='Chauffeur')),
            ],
            options={
                'verbose_name': 'Véhicule',
                'verbose_name_plural': 'Véhicules',
            },
        ),
    ]
